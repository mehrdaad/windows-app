<Page
    x:Class="wallabag.Views.ItemPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:wallabag.Converters"
    xmlns:helpers="using:wallabag.Common.Helpers"
    DataContext="{Binding ItemView, Source={StaticResource Locator}}">

    <Page.Resources>
        <converters:BooleanToIconConverter x:Key="BooleanToIconConverter" />

        <Storyboard x:Name="ShowMinimalCommandBarStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandsGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                EnableDependentAnimation="True"
                Storyboard.TargetName="commandsGrid"
                Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ShowFullCommandBarStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandsGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                EnableDependentAnimation="True"
                Storyboard.TargetName="commandsGrid"
                Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="193">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="extendedPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="HideCommandBarStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandsGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                EnableDependentAnimation="True"
                Storyboard.TargetName="commandsGrid"
                Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="extendedPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Name="ShowHtmlViewerStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="HtmlViewer"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                To="1"
                Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <ExponentialEase EasingMode="EaseIn" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HtmlViewer" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.8" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HtmlViewer" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.8" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="progressRing" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="progressRing" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <MenuFlyout x:Name="RightClickMenuFlyout">
            <MenuFlyoutItem
                x:Uid="SaveInWallabagMenuFlyoutItem"
                Command="{x:Bind ViewModel.SaveRightClickLinkCommand}"
                Text="Save in wallabag" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Uid="OpenInBrowserMenuFlyoutItem"
                Command="{x:Bind ViewModel.OpenRightClickLinkInBrowserCommand}"
                Text="Open in browser" />
            <MenuFlyoutItem
                x:Uid="CopyLinkMenuFlyoutItem"
                Command="{x:Bind ViewModel.CopyLinkToClipboardCommand}"
                Text="Copy link" />
        </MenuFlyout>
    </Page.Resources>

    <Grid Background="{x:Bind BackgroundBrush, Mode=OneWay}" RequestedTheme="{x:Bind ColorApplicationTheme, Mode=OneWay}">
        <WebView
            x:Name="HtmlViewer"
            DOMContentLoaded="HtmlViewer_DOMContentLoaded"
            Opacity="0"
            RenderTransformOrigin="0.5,0.5">
            <WebView.RenderTransform>
                <CompositeTransform />
            </WebView.RenderTransform>
        </WebView>

        <Rectangle
            x:Name="TitleBarBackgroundRectangle"
            Height="32"
            VerticalAlignment="Top">
            <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.3" Color="White" />
                    <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <ProgressRing
            x:Name="progressRing"
            Width="64"
            Height="64"
            Foreground="{x:Bind ForegroundBrush, Mode=OneWay}"
            IsActive="True" />

        <StackPanel VerticalAlignment="Bottom">
            <Button
                x:Name="openCommandsButton"
                Margin="12,0"
                Padding="12,2"
                HorizontalAlignment="Right"
                Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                Click="OpenCommandsButton_Click"
                Content="&#xE10C;"
                FontFamily="Segoe MDL2 Assets"
                FontSize="16"
                Style="{StaticResource ColoredButtonStyle}" />
            <Grid
                x:Name="commandsGrid"
                Height="0"
                x:DeferLoadStrategy="Lazy"
                Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="48" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <AppBarButton Command="{x:Bind ViewModel.Item.ShareCommand, Mode=OneWay}">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE72D;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton Command="{x:Bind ViewModel.ChangeFavoriteStatusCommand}" Icon="{x:Bind ViewModel.Item.Model.IsStarred, Mode=OneWay, Converter={StaticResource BooleanToIconConverter}}" />
                    <AppBarButton
                        Command="{x:Bind ViewModel.ChangeReadStatusCommand}"
                        Icon="{x:Bind ViewModel.Item.Model.IsRead, Mode=OneWay, Converter={StaticResource BooleanToIconConverter}, ConverterParameter=read}"
                        Style="{StaticResource AccentColorAppBarButton}" />
                    <AppBarButton Command="{x:Bind ViewModel.EditTagsCommand}" Icon="Tag" />
                    <AppBarButton Icon="Delete">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <StackPanel>
                                    <TextBlock
                                        x:Uid="DeleteWarningTextBlock"
                                        Text="This will delete the item permanently from your wallabag."
                                        TextWrapping="Wrap" />
                                    <Button
                                        x:Uid="DeletePermanentlyButton"
                                        Margin="0,8,0,0"
                                        HorizontalAlignment="Right"
                                        Background="Red"
                                        Command="{x:Bind ViewModel.DeleteCommand}"
                                        Content="Delete permanently"
                                        RequestedTheme="Dark" />
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </StackPanel>
                <RelativePanel
                    x:Name="extendedPanel"
                    Grid.Row="1"
                    Background="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}">
                    <RelativePanel.Resources>
                        <Style TargetType="AppBarButton">
                            <Setter Property="Margin" Value="0,4,0,0" />
                            <Setter Property="Opacity" Value="0.8" />
                        </Style>
                        <Style BasedOn="{StaticResource RoundIconButtonStyle}" TargetType="Button">
                            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
                            <Setter Property="Margin" Value="8,8,8,16" />
                            <Setter Property="Padding" Value="8" />
                        </Style>
                        <Style TargetType="FontIcon">
                            <Setter Property="Margin" Value="0,-2,0,0" />
                        </Style>
                    </RelativePanel.Resources>
                    <Rectangle
                        x:Name="placeholderRectangle"
                        Width="68"
                        Height="62"
                        RelativePanel.AlignHorizontalCenterWithPanel="True" />
                    <AppBarButton
                        x:Name="lightThemeButton"
                        x:Uid="lightThemeButton"
                        Click="ChangeColorSchemeAsync"
                        Label="Light"
                        RelativePanel.LeftOf="sepiaThemeButton">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#x1F311;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="sepiaThemeButton"
                        x:Uid="sepiaThemeButton"
                        Click="ChangeColorSchemeAsync"
                        Label="Sepia"
                        RelativePanel.LeftOf="placeholderRectangle">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#x1F312;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="darkThemeButton"
                        x:Uid="darkThemeButton"
                        Click="ChangeColorSchemeAsync"
                        Label="Dark"
                        RelativePanel.RightOf="placeholderRectangle">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#x1F314;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="blackThemeButton"
                        x:Uid="blackThemeButton"
                        Click="ChangeColorSchemeAsync"
                        Label="Black"
                        RelativePanel.RightOf="darkThemeButton">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#x1F315;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <Rectangle
                        x:Name="separator"
                        Height="1"
                        Margin="0,8"
                        Fill="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.Below="placeholderRectangle" />

                    <Button
                        x:Name="increaseFontSizeButton"
                        Click="IncreaseFontSizeAsync"
                        Content="&#xE109;"
                        RelativePanel.AlignHorizontalCenterWith="lightThemeButton"
                        RelativePanel.Below="separator" />
                    <Button
                        x:Name="decreaseFontSizeButton"
                        Click="DecreaseFontSizeAsync"
                        Content="&#xE108;"
                        RelativePanel.Below="separator"
                        RelativePanel.RightOf="increaseFontSizeButton" />
                    <Button
                        x:Name="fontFamilyButton"
                        Click="ChangeFontFamilyAsync"
                        Content="&#xE185;"
                        RelativePanel.Below="separator"
                        RelativePanel.LeftOf="textAlignmentButton" />
                    <Button
                        x:Name="textAlignmentButton"
                        Click="ChangeTextAlignmentAsync"
                        Content="&#xE1A2;"
                        RelativePanel.AlignHorizontalCenterWith="blackThemeButton"
                        RelativePanel.Below="separator" />
                </RelativePanel>
            </Grid>
        </StackPanel>

        <StackPanel
            x:Name="failureOverlay"
            Grid.Row="1"
            Margin="16,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            x:DeferLoadStrategy="Lazy"
            Visibility="{x:Bind ViewModel.ErrorDuringInitialization, Mode=OneWay, FallbackValue=Visible}">
            <TextBlock
                Margin="-8,0,0,0"
                FontSize="42"
                Text="😞"
                TextAlignment="Center" />
            <TextBlock
                Margin="0,16"
                FontSize="20"
                Style="{StaticResource TitleTextBlockStyle}"
                Text="{x:Bind ViewModel.ErrorDescription, Mode=OneWay}"
                TextAlignment="Center" />
            <Button
                x:Uid="OpenInBrowserButton"
                HorizontalAlignment="Center"
                Command="{x:Bind ViewModel.Item.OpenInBrowserCommand, Mode=OneWay}"
                Content="Open in browser" />
        </StackPanel>

        <Grid
            x:Name="AnnotationPopup"
            MinWidth="250"
            MaxHeight="300"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            x:DeferLoadStrategy="Lazy"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <TextBox
                Margin="0,0,0,4"
                Padding="16,12"
                Background="Transparent"
                BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                BorderThickness="0"
                IsReadOnly="{x:Bind ViewModel.CurrentAnnotation.IsReadOnly, Mode=OneWay}"
                Text="{x:Bind ViewModel.CurrentAnnotation.Text, Mode=TwoWay}" />
            <Button
                Grid.Row="1"
                Padding="14,4"
                HorizontalAlignment="Right"
                BorderThickness="0"
                Content="&#xE10C;"
                FontFamily="Segoe MDL2 Assets"
                FontSize="16" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ErrorState">
                    <VisualState.Setters>
                        <Setter Target="failureOverlay.Visibility" Value="Visible" />
                        <Setter Target="HtmlViewer.Visibility" Value="Collapsed" />
                        <Setter Target="progressRing.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
