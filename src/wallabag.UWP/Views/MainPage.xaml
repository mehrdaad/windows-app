<Page
    x:Class="wallabag.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:wallabag.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:wallabag.Data.ViewModels"
    DataContext="{Binding Main, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <MenuFlyout x:Key="ItemContextMenuMenuFlyout">
            <MenuFlyoutItem
                x:Uid="MarkAsReadMenuFlyoutItem"
                Command="{Binding MarkAsReadCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE001;"
                Text="Mark as read"
                Visibility="{Binding Model.IsRead, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}" />
            <MenuFlyoutItem
                x:Uid="UnmarkAsReadMenuFlyoutItem"
                Command="{Binding UnmarkAsReadCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE052;"
                Text="Unmark as read"
                Visibility="{Binding Model.IsRead, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <MenuFlyoutItem
                x:Uid="MarkAsFavoriteMenuFlyoutItem"
                Command="{Binding MarkAsStarredCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE006;"
                Text="Mark as favorite"
                Visibility="{Binding Model.IsStarred, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}" />
            <MenuFlyoutItem
                x:Uid="UnmarkAsFavoriteMenuFlyoutItem"
                Command="{Binding UnmarkAsStarredCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE007;"
                Text="Unmark as favorite"
                Visibility="{Binding Model.IsStarred, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Uid="EditTagsMenuFlyoutItem"
                Command="{Binding EditTagsCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE1CB;"
                Text="Edit tags" />
            <MenuFlyoutItem
                x:Uid="ShareMenuFlyoutItem"
                Command="{Binding ShareCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE72D;"
                Text="Share" />
            <MenuFlyoutItem
                x:Uid="OpenInBrowserMenuFlyoutItem"
                Command="{Binding OpenInBrowserCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE12B;"
                Text="Open in browser" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Uid="DeleteMenuFlyoutItem"
                Command="{Binding DeleteCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE107;"
                Text="Delete" />
        </MenuFlyout>
        <Storyboard x:Name="ShowSearchStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="topGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="topGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation
                d:IsOptimized="True"
                Storyboard.TargetName="searchButton"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                To="0"
                Duration="0" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ShowSearchResultsStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="HideSearchStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="topGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="topGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation
                d:IsOptimized="True"
                Storyboard.TargetName="searchButton"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                To="1"
                Duration="0:0:0.3" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ShowFilterStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="48">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase Amplitude="0.5" EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase Amplitude="0.5" EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="overlayRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overlayRectangle" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="HideFilterStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase Amplitude="0.5" EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="48">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase Amplitude="0.5" EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overlayRectangle" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="overlayRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <ItemsPanelTemplate x:Name="GridTemplate">
            <ItemsWrapGrid Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Name="StackTemplate">
            <ItemsStackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>

        <DataTemplate x:Name="GridItemTemplate" x:DataType="vm:ItemViewModel">
            <Grid
                x:Name="RootPanel"
                Loaded="RootPanel_Loaded"
                Unloaded="RootPanel_Unloaded">
                <Image x:Name="image" Stretch="UniformToFill">
                    <Image.Source>
                        <BitmapImage x:Name="RootImageSource" UriSource="{x:Bind Model.PreviewImageUri}" />
                    </Image.Source>
                </Image>
                <Grid VerticalAlignment="Bottom">
                    <Border x:Name="blurHost" />
                    <StackPanel Padding="16">
                        <TextBlock
                            x:Name="Title"
                            FontWeight="SemiBold"
                            MaxLines="2"
                            Text="{x:Bind Model.Title}"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap" />
                        <StackPanel
                            Margin="0,8,0,0"
                            Opacity=".7"
                            Orientation="Horizontal">
                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind Model.Hostname}" />
                            <TextBlock
                                Margin="8,0,4,0"
                                VerticalAlignment="Center"
                                FontFamily="Segoe MDL2 Assets"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Text="&#xE2AD;" />
                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind Model.EstimatedReadingTime}" />
                        </StackPanel>
                        <StackPanel
                            x:Name="tagsIndicator"
                            Margin="0,16,0,8"
                            Orientation="Horizontal"
                            Visibility="{x:Bind TagsAreExisting, Mode=OneWay}">
                            <TextBlock
                                Margin="0,0,4,0"
                                VerticalAlignment="Center"
                                FontFamily="Segoe MDL2 Assets"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Text="&#xE1CB;" />
                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind TagsString, Mode=OneWay}" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Name="StackItemTemplate" x:DataType="vm:ItemViewModel">
            <Grid x:Name="RootPanel">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Image
                    x:Name="image"
                    Grid.Column="1"
                    MaxWidth="70"
                    Stretch="UniformToFill">
                    <Image.Source>
                        <BitmapImage x:Name="RootImageSource" UriSource="{x:Bind Model.PreviewImageUri}" />
                    </Image.Source>
                </Image>
                <Grid VerticalAlignment="Bottom">
                    <StackPanel Padding="16">
                        <TextBlock
                            x:Name="Title"
                            FontWeight="SemiBold"
                            MaxLines="2"
                            Text="{x:Bind Model.Title}"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap" />
                        <StackPanel
                            Margin="0,8,0,0"
                            Opacity=".7"
                            Orientation="Horizontal">
                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind Model.Hostname}" />
                            <TextBlock
                                Margin="8,0,4,0"
                                VerticalAlignment="Center"
                                FontFamily="Segoe MDL2 Assets"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Text="&#xE2AD;" />
                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{x:Bind Model.EstimatedReadingTime}" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Rectangle
            Height="48"
            VerticalAlignment="Top"
            Fill="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
        <Pivot
            x:Name="MainPivot"
            SelectedIndex="{x:Bind ViewModel.CurrentSearchProperties.ItemTypeIndex, Mode=TwoWay}"
            SelectionChanged="Pivot_SelectionChanged">
            <Pivot.Resources>
                <Style TargetType="PivotHeaderItem">
                    <Setter Property="FontSize" Value="15" />
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Style>
                <Style TargetType="PivotItem">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />
                </Style>
            </Pivot.Resources>
            <PivotItem x:Uid="UnreadPivotItem" Header="UNREAD">
                <controls:AdaptiveGridView
                    x:Name="ItemGridView"
                    Padding="4"
                    IsItemClickEnabled="True"
                    ItemClick="ItemGridView_ItemClick"
                    ItemTemplate="{StaticResource GridItemTemplate}"
                    ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
                    MinItemHeight="220"
                    MinItemWidth="300" />
            </PivotItem>
            <PivotItem x:Uid="FavoritesPivotItem" Header="FAVORITES" />
            <PivotItem x:Uid="ArchivedPivotItem" Header="ARCHIVED" />
        </Pivot>
        <AppBarButton
            x:Name="searchButton"
            Height="48"
            HorizontalAlignment="Right"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            Click="SearchButton_Click"
            Icon="Find"
            IsCompact="True" />
        <Grid
            x:Name="topGrid"
            Height="48"
            VerticalAlignment="Top"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource PageTitleTextBlockStyle}" Text="{x:Bind ViewModel.PageHeader, Mode=OneWay}" />
            <AutoSuggestBox
                x:Name="searchBox"
                x:Uid="SearchBox"
                Margin="8"
                VerticalAlignment="Center"
                ItemsSource="{x:Bind ViewModel.ItemSuggestions, Mode=OneWay}"
                PlaceholderText="Search…"
                QueryIcon="Find"
                QuerySubmitted="SearchBox_QuerySubmitted"
                Text="{x:Bind ViewModel.CurrentSearchProperties.Query, Mode=TwoWay}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="QuerySubmitted">
                        <core:InvokeCommandAction Command="{x:Bind ViewModel.SearchQuerySubmittedCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AutoSuggestBox>
            <AppBarButton
                Grid.Column="1"
                Click="CloseSearchButton_Click"
                Command="{x:Bind ViewModel.EndSearchCommand}"
                Icon="Cancel" />
        </Grid>
        <Rectangle
            x:Name="overlayRectangle"
            x:DeferLoadStrategy="Lazy"
            Fill="#54000000"
            PointerPressed="OverlayRectangle_PointerPressed"
            Visibility="Collapsed" />
        <StackPanel
            x:Name="noItemsOverlay"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{x:Bind ViewModel.ItemsCountIsZero, Mode=OneWay}">
            <TextBlock
                FontSize="60"
                Text="😔"
                TextAlignment="Center" />
            <TextBlock
                x:Uid="NothingFoundTextBlock"
                Margin="0,12,0,0"
                Style="{StaticResource InfoTextBlockStyle}"
                Text="Didn't found something for you. Sorry." />
        </StackPanel>
        <StackPanel
            x:Name="filterStackPanel"
            VerticalAlignment="Top"
            x:DeferLoadStrategy="Lazy"
            Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
            BorderBrush="{ThemeResource SystemControlBackgroundBaseLowBrush}"
            BorderThickness="1"
            RenderTransformOrigin="0.5,0.5"
            Visibility="Collapsed">
            <StackPanel.RenderTransform>
                <CompositeTransform />
            </StackPanel.RenderTransform>
            <StackPanel.Resources>
                <Style TargetType="ComboBox">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="12,7,0,9" />
                </Style>
                <Style x:Key="ResetFilterTypeButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Content" Value="&#xE10A;" />
                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="Width" Value="36" />
                </Style>
                <Style x:Key="RowGridStyle" TargetType="Grid">
                    <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltMediumLowBrush}" />
                    <Setter Property="BorderBrush" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                    <Setter Property="BorderThickness" Value="0,1" />
                </Style>
            </StackPanel.Resources>
            <TextBlock
                x:Uid="SortOrderFilterTitleTextBlock"
                Style="{StaticResource MenuHeaderTextBlockStyle}"
                Text="SORT BY" />
            <Grid Style="{StaticResource RowGridStyle}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <RadioButton
                        x:Uid="SortByDateRadioButton"
                        Command="{x:Bind ViewModel.SetSortTypeCommand}"
                        CommandParameter="date"
                        Content="by date"
                        IsChecked="{x:Bind ViewModel.SortByCreationDate, Mode=OneWay}"
                        Style="{StaticResource ExpandableIconRadioButtonStyle}"
                        Tag="&#xE163;" />
                    <RadioButton
                        x:Uid="SortByReadingTimeRadioButton"
                        Command="{x:Bind ViewModel.SetSortTypeCommand}"
                        CommandParameter="time"
                        Content="by reading time"
                        IsChecked="{x:Bind ViewModel.SortByReadingTime, Mode=OneWay}"
                        Style="{StaticResource ExpandableIconRadioButtonStyle}"
                        Tag="&#xE2AD;" />
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <RadioButton
                        x:Uid="OrderAscendingRadioButton"
                        Margin="0"
                        Command="{x:Bind ViewModel.SetSortOrderCommand}"
                        CommandParameter="asc"
                        Content="&#xE0E4;"
                        IsChecked="{x:Bind ViewModel.CurrentSearchProperties.OrderAscending, Mode=OneWay}"
                        Style="{StaticResource IconRadioButtonStyle}"
                        Tag="order ascending" />
                    <RadioButton
                        x:Uid="OrderDescendingRadioButton"
                        Margin="0"
                        Command="{x:Bind ViewModel.SetSortOrderCommand}"
                        CommandParameter="desc"
                        Content="&#xE0E5;"
                        IsChecked="{x:Bind ViewModel.CurrentSearchProperties.OrderAscending, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"
                        Style="{StaticResource IconRadioButtonStyle}"
                        Tag="order descending" />
                </StackPanel>
            </Grid>
            <TextBlock
                x:Uid="LanguageFilterTitleTextBlock"
                Style="{StaticResource MenuHeaderTextBlockStyle}"
                Text="LANGUAGE" />
            <Grid Style="{StaticResource RowGridStyle}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <ComboBox
                    x:Uid="LanguageComboBox"
                    ItemsSource="{x:Bind ViewModel.LanguageSuggestions, Mode=OneWay}"
                    PlaceholderText="select language…"
                    SelectedItem="{x:Bind ViewModel.CurrentSearchProperties.Language, Mode=TwoWay}" />
                <Button
                    Grid.Column="1"
                    Command="{x:Bind ViewModel.ResetLanguageFilterCommand}"
                    Style="{StaticResource ResetFilterTypeButtonStyle}" />
            </Grid>
            <TextBlock
                x:Uid="TagFilterTitleTextBlock"
                Style="{StaticResource MenuHeaderTextBlockStyle}"
                Text="TAG" />
            <Grid Style="{StaticResource RowGridStyle}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <ComboBox
                    x:Uid="TagComboBox"
                    ItemsSource="{x:Bind ViewModel.TagSuggestions, Mode=OneWay}"
                    PlaceholderText="select tag…"
                    SelectedItem="{x:Bind ViewModel.CurrentSearchProperties.Tag, Mode=TwoWay}" />
                <Button
                    Grid.Column="1"
                    Command="{x:Bind ViewModel.ResetTagFilterCommand}"
                    Style="{StaticResource ResetFilterTypeButtonStyle}" />
            </Grid>

            <Button
                x:Uid="ResetFilterButton"
                Margin="4,18,4,4"
                Command="{x:Bind ViewModel.ResetFilterCommand}"
                Content="Reset filter"
                Style="{StaticResource TextBlockButtonStyle}" />
        </StackPanel>
        <CommandBar x:Name="MainCommandBar" Grid.Row="1">
            <AppBarButton
                x:Uid="AddItemAppBarButton"
                Command="{x:Bind ViewModel.AddCommand}"
                Icon="Add"
                Label="Add" />
            <AppBarButton
                x:Uid="SyncAppBarButton"
                Command="{x:Bind ViewModel.SyncCommand}"
                Label="Sync">
                <AppBarButton.Icon>
                    <SymbolIcon
                        x:Name="syncIcon"
                        RenderTransformOrigin="0.5,0.5"
                        Symbol="Sync">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform />
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton
                x:Uid="MultipleSelectionAppBarButton"
                Click="EnableMultipleSelectionButtonClick"
                Icon="Bullets"
                Label="Select" />
            <AppBarToggleButton
                x:Name="filterButton"
                x:Uid="FilterButton"
                Checked="FilterButton_Checked"
                Icon="Filter"
                Label="Filter"
                Unchecked="FilterButton_Unchecked" />
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Uid="SettingsAppBarButton"
                    Command="{x:Bind ViewModel.NavigateToSettingsPageCommand}"
                    Label="Settings" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
        <Border
            x:Name="offlineTaskIndicatorBorder"
            Grid.Row="1"
            Width="16"
            Height="16"
            Margin="0,0,200,6"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Background="{ThemeResource SystemControlBackgroundAccentBrush}"
            CornerRadius="8"
            RequestedTheme="Dark"
            Visibility="{x:Bind ViewModel.OfflineTaskIndicatorIsVisible, Mode=OneWay}">
            <TextBlock
                VerticalAlignment="Center"
                FontSize="10"
                FontWeight="SemiBold"
                Text="{x:Bind ViewModel.OfflineTaskCount, Mode=OneWay}"
                TextAlignment="Center"
                TextLineBounds="Tight" />
        </Border>
        <CommandBar
            x:Name="MultipleSelectionCommandBar"
            Grid.Row="1"
            x:DeferLoadStrategy="Lazy"
            Visibility="Collapsed">
            <AppBarButton
                x:Uid="EditAppBarButton"
                Icon="Edit"
                Label="Edit">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem
                            x:Uid="MarkAsReadMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.MarkAsReadCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE001;"
                            Text="Mark as read" />
                        <MenuFlyoutItem
                            x:Uid="UnmarkAsReadMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.UnmarkAsReadCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE052;"
                            Text="Unmark as read" />
                        <MenuFlyoutItem
                            x:Uid="MarkAsFavoriteMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.MarkAsFavoriteCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE006;"
                            Text="Mark as favorite" />
                        <MenuFlyoutItem
                            x:Uid="UnmarkAsFavoriteMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.UnmarkAsFavoriteCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE007;"
                            Text="Unmark as favorite" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem
                            x:Uid="EditTagsMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.EditTagsCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE1CB;"
                            Text="Edit tags" />
                        <MenuFlyoutItem
                            x:Uid="OpenInBrowserMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.OpenInBrowserCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE12B;"
                            Text="Open in browser" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem
                            x:Uid="DeleteMenuFlyoutItem"
                            Command="{x:Bind SelectionViewModel.DeleteCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE107;"
                            Text="Delete" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Uid="CancelAppBarButton"
                Click="DisableMultipleSelectionButtonClick"
                Icon="Cancel"
                Label="Cancel" />
        </CommandBar>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveStates">
                <VisualState x:Name="Narrow">
                    <VisualState.Setters>
                        <Setter Target="ItemGridView.MinItemHeight" Value="75" />
                        <Setter Target="ItemGridView.ItemsPanel" Value="{StaticResource StackTemplate}" />
                        <Setter Target="ItemGridView.ItemTemplate" Value="{StaticResource StackItemTemplate}" />
                        <Setter Target="filterStackPanel.VerticalAlignment" Value="Bottom" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.Setters>
                        <Setter Target="searchBox.HorizontalAlignment" Value="Right" />
                        <Setter Target="searchBox.MinWidth" Value="300" />
                        <Setter Target="ItemGridView.ItemsPanel" Value="{StaticResource GridTemplate}" />
                        <Setter Target="ItemGridView.ItemTemplate" Value="{StaticResource GridItemTemplate}" />
                        <Setter Target="filterStackPanel.HorizontalAlignment" Value="Right" />
                        <Setter Target="filterStackPanel.VerticalAlignment" Value="Bottom" />
                        <Setter Target="filterStackPanel.MinWidth" Value="300" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="680" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="SyncState">
                    <Storyboard>
                        <DoubleAnimation
                            d:IsOptimized="True"
                            RepeatBehavior="Forever"
                            Storyboard.TargetName="syncIcon"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)"
                            To="360"
                            Duration="0:0:1" />
                    </Storyboard>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsSyncing, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="MultipleSelectionStates">
                <VisualState x:Name="MultipleSelectionEnabled">
                    <VisualState.Setters>
                        <Setter Target="ItemGridView.SelectionMode" Value="Multiple" />
                        <Setter Target="ItemGridView.IsItemClickEnabled" Value="False" />
                        <Setter Target="ItemGridView.IsMultiSelectCheckBoxEnabled" Value="True" />
                        <Setter Target="MultipleSelectionCommandBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MultipleSelectionDisabled">
                    <VisualState.Setters>
                        <Setter Target="ItemGridView.SelectionMode" Value="None" />
                        <Setter Target="ItemGridView.IsItemClickEnabled" Value="True" />
                        <Setter Target="ItemGridView.IsMultiSelectCheckBoxEnabled" Value="False" />
                        <Setter Target="MultipleSelectionCommandBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
